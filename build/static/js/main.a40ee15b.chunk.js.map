{"version":3,"sources":["components/LoginForm.jsx","components/SignedOut.jsx","components/AppContainer.jsx","components/AppHeader.jsx","pages/Home.jsx","pages/Dashboard.jsx","pages/Profile.jsx","components/SignedIn.jsx","App.js","index.js"],"names":["LoginForm","props","username","useRef","password","setCreds","className","type","required","ref","onClick","e","preventDefault","creds","current","value","submitCreds","SignedOut","setUser","setLogin","useState","credentials","setCredentials","useEffect","AppContainer","children","AppHeader","Home","Dashboard","Profile","SignedIn","user","to","path","exact","component","_","App","loginState","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAoCeA,MAjCf,SAAmBC,GAEjB,IAAMC,EAAWC,iBAAO,MAClBC,EAAWD,iBAAO,MAGhBE,EAAaJ,EAAbI,SAUR,OACE,uBAAMC,UAAU,aAAhB,UACE,2BAAUA,UAAU,iBAApB,UACE,wBAAQA,UAAU,uBAAlB,sBACA,uBAAOC,KAAK,OAAOC,UAAQ,EAACC,IAAKP,OAEnC,2BAAUI,UAAU,iBAApB,UACE,wBAAQA,UAAU,uBAAlB,sBACA,uBAAOC,KAAK,WAAWC,UAAQ,EAACC,IAAKL,OAEvC,wBAAQM,QAAS,SAACC,GAAD,OAnBD,SAACA,GAEnBA,EAAEC,iBACF,IAAIC,EAAQ,CACVX,SAAUA,EAASY,QAAQC,MAC3BX,SAAUA,EAASU,QAAQC,OAE7BV,EAASQ,GAYiBG,CAAYL,IAAIL,UAAU,uBAAlD,uBCDSW,MAzBf,SAAmBhB,GAAO,IAEhBiB,EAAsBjB,EAAtBiB,QAASC,EAAalB,EAAbkB,SAFO,EAIcC,mBAAS,CAC7ClB,SAAU,GACVE,SAAU,KANY,mBAIjBiB,EAJiB,KAIJC,EAJI,KAkBxB,OAVAC,qBAAU,WAGmB,mBAAzBF,EAAYnB,UACa,eAAzBmB,EAAYjB,WAEZe,GAAS,GACTD,EAAQG,EAAYnB,aAErB,CAACmB,IAEF,mCACE,cAAC,EAAD,CAAWhB,SAAUiB,O,cChBZE,MAPf,SAAsBvB,GAClB,OACI,8BACKA,EAAMwB,YCKJC,MARf,SAAmBzB,GACf,OACI,mCACKA,EAAMwB,YCGJE,MANf,SAAc1B,GACV,OACI,sCCIO2B,MANf,SAAmB3B,GACf,OACI,2CCMO4B,MARf,SAAiB5B,GACb,OACI,mCACKA,EAAMwB,YCgCJK,MA1Bf,SAAkB7B,GAAO,IAEf8B,EAAmB9B,EAAnB8B,KAAMZ,EAAalB,EAAbkB,SACd,OACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,cAAC,IAAD,CAAMa,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,aAAT,uBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,wBAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,aAAaE,UAAWP,IACpC,cAAC,IAAD,CAAOK,KAAK,WAAZ,SACE,eAAC,EAAD,WACE,4CAAeF,KACf,wBAAQrB,QAAS,SAAC0B,GAAD,OAAOjB,GAAS,IAAjC,gC,MCJGkB,MAhBf,WAAgB,IAAD,EACkBjB,oBAAS,GAD3B,mBACNkB,EADM,KACMnB,EADN,OAEkBC,mBAAS,MAF3B,mBAENmB,EAFM,KAEOrB,EAFP,KAGb,OACE,qBAAKZ,UAAU,MAAf,SACGgC,GAAcC,EACb,cAAC,IAAD,UACE,cAAC,EAAD,CAAUR,KAAMQ,EAAapB,SAAUA,MAGzC,cAAC,EAAD,CAAWA,SAAUA,EAAUD,QAASA,OCZhDsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a40ee15b.chunk.js","sourcesContent":["import { useRef } from \"react\";\r\nimport \"./LoginForm.css\"\r\n\r\nfunction LoginForm(props) {\r\n  // using ref for handling inputs\r\n  const username = useRef(null);\r\n  const password = useRef(null);\r\n\r\n  // the function for setting the credentials according to input\r\n  const { setCreds } = props;\r\n  const submitCreds = (e) => {\r\n    // for preventing the page from refreshing\r\n    e.preventDefault();\r\n    let creds = {\r\n      username: username.current.value,\r\n      password: password.current.value,\r\n    };\r\n    setCreds(creds); // send credentials to the parent component\r\n  };\r\n  return (\r\n    <form className=\"login-form\">\r\n      <fieldset className=\"field username\">\r\n        <legend className=\"field-title username\">Username</legend>\r\n        <input type=\"text\" required ref={username}></input>\r\n      </fieldset>\r\n      <fieldset className=\"field password\">\r\n        <legend className=\"field-title password\">Password</legend>\r\n        <input type=\"password\" required ref={password}></input>\r\n      </fieldset>\r\n      <button onClick={(e) => submitCreds(e)} className=\"button submit-button\">\r\n        Login\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nfunction SignedOut(props) {\r\n  // the functions for setting the active username and to tell that the user has logged in\r\n  const { setUser, setLogin } = props;\r\n  // supplying the empty strings to declare type\r\n  const [credentials, setCredentials] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  useEffect(() => {\r\n    // only for debugging\r\n    if (\r\n      credentials.username === \"nirmal15mathew\" &&\r\n      credentials.password === \"n2i0r0m5al\"\r\n    ) {\r\n      setLogin(true);\r\n      setUser(credentials.username);\r\n    }\r\n  }, [credentials]); // updates when credentials are updated by the LoginForm\r\n  return (\r\n    <>\r\n      <LoginForm setCreds={setCredentials}></LoginForm>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignedOut;\r\n","function AppContainer(props){\r\n    return (\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default AppContainer;","function AppHeader(props){\r\n    return (\r\n        <>\r\n            {props.children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","function Home(props){\r\n    return (\r\n        <p>Home</p>\r\n    )\r\n}\r\n\r\nexport default Home;","function Dashboard(props){\r\n    return (\r\n        <p>Dashboard</p>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","function Profile(props){\r\n    return (\r\n        <>\r\n            {props.children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { Route, Switch, Link } from \"react-router-dom\";\r\nimport AppContainer from \"./AppContainer\";\r\nimport AppHeader from \"./AppHeader\";\r\n\r\n// pages for routing\r\nimport Home from \"../pages/Home\";\r\nimport Dashboard from \"../pages/Dashboard\";\r\nimport Profile from \"../pages/Profile\";\r\n\r\nfunction SignedIn(props) {\r\n  // for signing out and to get the current logged in user\r\n  const { user, setLogin } = props;\r\n  return (\r\n    <AppContainer>\r\n      <AppHeader>\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/dashboard\">Dashboard</Link>\r\n        <Link to=\"/profile\">Profile</Link>\r\n      </AppHeader>\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Home></Home>\r\n        </Route>\r\n        <Route path=\"/dashboard\" component={Dashboard} />\r\n        <Route path=\"/profile\">\r\n          <Profile>\r\n            <h1>Signed In {user}</h1>\r\n            <button onClick={(_) => setLogin(false)}>Logout</button>\r\n          </Profile>\r\n        </Route>\r\n      </Switch>\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nexport default SignedIn;\r\n","//import logo from './logo.svg';\nimport SignedOut from \"./components/SignedOut\";\nimport SignedIn from \"./components/SignedIn\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  const [loginState, setLogin] = useState(false);\n  const [currentUser, setUser] = useState(null);\n  return (\n    <div className=\"App\">\n      {loginState && currentUser ? (\n        <BrowserRouter>\n          <SignedIn user={currentUser} setLogin={setLogin} />\n        </BrowserRouter>\n      ) : (\n        <SignedOut setLogin={setLogin} setUser={setUser} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}